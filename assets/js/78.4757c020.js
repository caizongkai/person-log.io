(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{340:function(a,s,t){"use strict";t.r(s);var n=t(0),e=Object(n.a)({},(function(){this._self._c;return this._m(0)}),[function(){var a=this,s=a._self._c;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"java并发理论知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java并发理论知识"}},[a._v("#")]),a._v(" Java并发理论知识")]),a._v(" "),s("blockquote",[s("p",[a._v("带着问题学本节知识点")])]),a._v(" "),s("ul",[s("li",[a._v("多线程的出现是要解决什么问题的?")]),a._v(" "),s("li",[a._v("线程不安全是指什么? 举例说明")]),a._v(" "),s("li",[a._v("并发出现线程不安全的本质什么? 可见性，原子性和有序性。")]),a._v(" "),s("li",[a._v("Java是怎么解决并发问题的? 3个关键字，JMM和8个Happens-Before")]),a._v(" "),s("li",[a._v("线程安全是不是非真即假? 不是")]),a._v(" "),s("li",[a._v("线程安全有哪些实现思路?")]),a._v(" "),s("li",[a._v("如何理解并发和并行的区别?")])]),a._v(" "),s("h2",{attrs:{id:"为什么需要多线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要多线程"}},[a._v("#")]),a._v(" 为什么需要多线程")]),a._v(" "),s("p",[a._v("因为CPU、内存和I/O设备性能的差异，为了平衡这三者的差异我们需要用到多线程，具体表现如下：")]),a._v(" "),s("ul",[s("li",[a._v("因为CPU于I/O设备的性能差异巨大，为了平衡该差异，以分时复用CPU； //会导致"),s("strong",[a._v("原子性")]),a._v("问题")]),a._v(" "),s("li",[a._v("因为CPU和内存性能差异，CPU采用了缓存； //会导致"),s("strong",[a._v("可见性")]),a._v("问题")]),a._v(" "),s("li",[a._v("编译程序优化指令执行顺序，使得缓存能更好的使用； //会导致有序性问题")])]),a._v(" "),s("h2",{attrs:{id:"java出现并发问题的三要素："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java出现并发问题的三要素："}},[a._v("#")]),a._v(" Java出现并发问题的三要素：")]),a._v(" "),s("h3",{attrs:{id:"原子性-分时复用cpu引起"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原子性-分时复用cpu引起"}},[a._v("#")]),a._v(" 原子性: 分时复用CPU引起")]),a._v(" "),s("p",[a._v("一个操作要么都执行，要么都不执行，典型的如转账问题。比如从账户A向账户B转1000元，那么必然包括2个操作：从账户A减去1000元，往账户B加上1000元。")]),a._v(" "),s("h3",{attrs:{id:"可见性：cpu缓存引起"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可见性：cpu缓存引起"}},[a._v("#")]),a._v(" 可见性：CPU缓存引起")]),a._v(" "),s("p",[a._v("一个线程对一个变量的修改，另一个线程能立马看到该变量的修改，否则就会出现可见性问题。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//线程1执行的代码")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ni "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//线程2执行的代码")]),a._v("\nj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h3",{attrs:{id:"有序性-重排序引起"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有序性-重排序引起"}},[a._v("#")]),a._v(" 有序性: 重排序引起")]),a._v(" "),s("p",[a._v("有序性：即程序执行的顺序按照代码的先后顺序执行。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("              \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" flag "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ni "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//语句1  ")]),a._v("\nflag "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//语句2")]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("上面代码定义了一个int型变量，定义了一个boolean类型变量，然后分别对两个变量进行赋值操作。从代码顺序上看，语句1是在语句2前面的，那么JVM在真正执行这段代码的时候会保证语句1一定会在语句2前面执行吗? 不一定，为什么呢? 这里可能会发生指令重排序。")]),a._v(" "),s("p",[a._v("重排序包含三种：")]),a._v(" "),s("ul",[s("li",[a._v("编译器重排序")]),a._v(" "),s("li",[a._v("指令级重排序")]),a._v(" "),s("li",[a._v("内存系统重排序")])]),a._v(" "),s("p",[a._v("这些重排序都可能会导致多线程程序出现内存可见性问题。对于编译器，JMM 的编译器重排序规则会禁止特定类型的编译器重排序（不是所有的编译器重排序都要禁止）。对于处理器重排序，JMM 的处理器重排序规则会要求 java 编译器在生成指令序列时，插入特定类型的内存屏障（memory barriers，intel 称之为 memory fence）指令，通过内存屏障指令来禁止特定类型的处理器重排序。")]),a._v(" "),s("h2",{attrs:{id:"java是如何解决并发问题的（jmm-java内存模型）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java是如何解决并发问题的（jmm-java内存模型）"}},[a._v("#")]),a._v(" java是如何解决并发问题的（JMM Java内存模型）")]),a._v(" "),s("p",[a._v("java内存模型规范了JVM如何按需提供禁用缓存和编译优化的方法，具体的方法包括：")]),a._v(" "),s("ul",[s("li",[a._v("volatile、synchronized、final关键字")]),a._v(" "),s("li",[a._v("Happens-Before规则")])]),a._v(" "),s("h3",{attrs:{id:"可见性，有序性，原子性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可见性，有序性，原子性"}},[a._v("#")]),a._v(" "),s("strong",[a._v("可见性，有序性，原子性")])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("原子性问题")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//语句1: 直接将数值10赋值给x，也就是说线程执行这个语句的会直接将数值10写入到工作内存中")]),a._v("\ny "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//语句2: 包含2个操作，它先要去读取x的值，再将x的值写入工作内存，虽然读取x的值以及 将x的值写入工作内存 这2个操作都是原子性操作，但是合起来就不是原子性操作了。")]),a._v("\nx"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//语句3： x++包括3个操作：读取x的值，进行加1操作，写入新的值。")]),a._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//语句4： 同语句3")]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("JAVA内存模型只保证简单的赋值操作如语句一是原子性操作，如需要更大范围的原子性操作，需要用到synchronized和Lock，由于synchronized和Lock能够保证任一时刻只有一个线程执行该代码块，那么自然就不存在原子性问题了，从而保证了原子性。")])]),a._v(" "),s("li",[s("p",[a._v("可见性")]),a._v(" "),s("p",[a._v("可见性问题可以通过volatile来保证，volatile是通过保证该变量的每次修改都会写入到主存中，每次读取都从主存中读取，从而保证了其可见性。")]),a._v(" "),s("p",[a._v("其他普通变量何时写入主存是不确定的，所以无法保证其可见性。sychronized和Lock也能保证可见性。")])]),a._v(" "),s("li",[s("p",[a._v("有序性")]),a._v(" "),s("p",[a._v("在Java里面，可以通过volatile关键字来保证一定的“有序性”。另外可以通过synchronized和Lock来保证有序性，很显然，synchronized和Lock保证每个时刻是有一个线程执行同步代码，相当于是让线程顺序执行同步代码，自然就保证了有序性。当然JMM是通过Happens-Before 规则来保证有序性的。")])])]),a._v(" "),s("h3",{attrs:{id:"三个关键字-sychronized、volatile、final"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三个关键字-sychronized、volatile、final"}},[a._v("#")]),a._v(" 三个关键字:sychronized、volatile、final")]),a._v(" "),s("ul",[s("li",[a._v("sychronized关键字 \t//todo")]),a._v(" "),s("li",[a._v("volatile关键字    //todo")]),a._v(" "),s("li",[a._v("final关键字   //todo")])]),a._v(" "),s("h2",{attrs:{id:"happens-before-规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#happens-before-规则"}},[a._v("#")]),a._v(" Happens-Before 规则")]),a._v(" "),s("p",[a._v("除了可以用sychronized和volatile来保证有序性，JVM还规定了先行发生规则，让一个操作无需控制就能先于另一操作完成。")]),a._v(" "),s("h3",{attrs:{id:"_1、单一线程原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、单一线程原则"}},[a._v("#")]),a._v(" 1、单一线程原则")]),a._v(" "),s("p",[a._v("在一个线程内，程序前面的操作先于程序后面的操作完成。")]),a._v(" "),s("h3",{attrs:{id:"_2、管程锁定规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、管程锁定规则"}},[a._v("#")]),a._v(" 2、管程锁定规则")]),a._v(" "),s("p",[a._v("一个 unlock 操作先行发生于后面对同一个锁的 lock 操作。")]),a._v(" "),s("h3",{attrs:{id:"_3、volatile-变量规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、volatile-变量规则"}},[a._v("#")]),a._v(" 3、volatile 变量规则")]),a._v(" "),s("p",[a._v("对一个 volatile 变量的写操作先行发生于后面对这个变量的读操作。")]),a._v(" "),s("h3",{attrs:{id:"_4、线程启动规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、线程启动规则"}},[a._v("#")]),a._v(" 4、线程启动规则")]),a._v(" "),s("p",[a._v("Thread 对象的 start() 方法调用先行发生于此线程的每一个动作。")]),a._v(" "),s("h3",{attrs:{id:"_5、线程加入规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、线程加入规则"}},[a._v("#")]),a._v(" 5、线程加入规则")]),a._v(" "),s("p",[a._v("Thread 对象的结束先行发生于 join() 方法返回。")]),a._v(" "),s("h3",{attrs:{id:"_6、线程中断规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、线程中断规则"}},[a._v("#")]),a._v(" 6、线程中断规则")]),a._v(" "),s("p",[a._v("对线程 interrupt() 方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过 interrupted() 方法检测到是否有中断发生。")]),a._v(" "),s("h3",{attrs:{id:"_7、对象终结规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、对象终结规则"}},[a._v("#")]),a._v(" 7、对象终结规则")]),a._v(" "),s("p",[a._v("一个对象的初始化完成(构造函数执行结束)先行发生于它的 finalize() 方法的开始。")]),a._v(" "),s("h3",{attrs:{id:"_8、传递性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、传递性"}},[a._v("#")]),a._v(" 8、传递性")]),a._v(" "),s("p",[a._v("如果操作 A 先行发生于操作 B，操作 B 先行发生于操作 C，那么操作 A 先行发生于操作 C。")]),a._v(" "),s("h2",{attrs:{id:"线程安全：不是一个非真即假的命题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程安全：不是一个非真即假的命题"}},[a._v("#")]),a._v(" 线程安全：不是一个非真即假的命题")]),a._v(" "),s("p",[a._v("一个类可以被多个线程调用时就是线程安全的，线程安全按照数据共享的强弱分为五个等级：不可变、绝对线程安全、相对线程安全、线程兼容和线程对立。")]),a._v(" "),s("h3",{attrs:{id:"_1、不可变"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、不可变"}},[a._v("#")]),a._v(" 1、不可变")]),a._v(" "),s("p",[a._v("不可变的对象一定是线程安全的，只要一个不可变的对象被正确地构建出来，永远也不会看到它在多个线程之中处于不一致的状态。")]),a._v(" "),s("p",[a._v("不可变的类型：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("String")])]),a._v(" "),s("li",[s("p",[a._v("final关键字修饰的基本数据类型")])]),a._v(" "),s("li",[s("p",[a._v("枚举类型")])]),a._v(" "),s("li",[s("p",[a._v("Number部分子类，如Long和Double等数值包装类，BigInteger 和 BigDecimal 等大数据类型。但同为 Number 的原子类")]),a._v(" "),s("p",[a._v("AtomicInteger 和 AtomicLong 则是可变的。")])])]),a._v(" "),s("p",[a._v("对于集合类型，可以使用 Collections.unmodifiableXXX() 方法来获取一个不可变的集合。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ImmutableExample")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" unmodifiableMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Collections")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("unmodifiableMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        unmodifiableMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v('Exception in thread "main" java.lang.UnsupportedOperationException\n    at java.util.Collections$UnmodifiableMap.put(Collections.java:1457)\n    at ImmutableExample.main(ImmutableExample.java:9)\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_2、绝对线程安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、绝对线程安全"}},[a._v("#")]),a._v(" 2、绝对线程安全")]),a._v(" "),s("p",[a._v("不管运行时环境如何，调用者都不需要任何额外的同步措施。")]),a._v(" "),s("h3",{attrs:{id:"_3、相对线程安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、相对线程安全"}},[a._v("#")]),a._v(" 3、相对线程安全")]),a._v(" "),s("p",[a._v("相对线程安全需要保证对这个对象单独的操作是线程安全的，在调用的时候不需要做额外的保障措施。但是对于一些特定顺序的连续调用，就可能需要在调用端使用额外的同步手段来保证调用的正确性。")]),a._v(" "),s("p",[a._v("在 Java 语言中，大部分的线程安全类都属于这种类型，例如 Vector、HashTable、Collections 的 synchronizedCollection() 方法包装的集合等。")]),a._v(" "),s("p",[a._v("对于下面的代码，如果删除元素的线程删除了 Vector 的一个元素，而获取元素的线程试图访问一个已经被删除的元素，那么就会抛出 ArrayIndexOutOfBoundsException。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("VectorUnsafeExample")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Vector")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" vector "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Vector")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ExecutorService")]),a._v(" executorService "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Executors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("newCachedThreadPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                    vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                    vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            executorService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("shutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br")])]),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v('Exception in thread "Thread-159738" java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 3\n    at java.util.Vector.remove(Vector.java:831)\n    at VectorUnsafeExample.lambda$main$0(VectorUnsafeExample.java:14)\n    at VectorUnsafeExample$$Lambda$1/713338599.run(Unknown Source)\n    at java.lang.Thread.run(Thread.java:745)\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("如果要保证上面的代码能正确执行下去，就需要对删除元素和获取元素的代码进行同步。例如用synchronized锁即可。")]),a._v(" "),s("h3",{attrs:{id:"_4、线程兼容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、线程兼容"}},[a._v("#")]),a._v(" 4、线程兼容")]),a._v(" "),s("p",[a._v("线程兼容是指对象本身并不是线程安全的，但是可以通过在调用端正确地使用同步手段来保证对象在并发环境中可以安全地使用，我们平常说一个类不是线程安全的，绝大多数时候指的是这一种情况。Java API 中大部分的类都是属于线程兼容的，如与前面的 Vector 和 HashTable 相对应的集合类 ArrayList 和 HashMap 等。")]),a._v(" "),s("h3",{attrs:{id:"_5、线程对立"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、线程对立"}},[a._v("#")]),a._v(" 5、线程对立")]),a._v(" "),s("p",[a._v("线程对立是指无论调用端是否采取了同步措施，都无法在多线程环境中并发使用的代码。由于 Java 语言天生就具备多线程特性，线程对立这种排斥多线程的代码是很少出现的，而且通常都是有害的，应当尽量避免。")]),a._v(" "),s("h2",{attrs:{id:"线程安全的实现方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程安全的实现方法"}},[a._v("#")]),a._v(" 线程安全的实现方法")]),a._v(" "),s("p",[a._v("//todo")]),a._v(" "),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")])])])}],!1,null,null,null);s.default=e.exports}}]);