(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{370:function(r,e,c){"use strict";c.r(e);var o=c(0),t=Object(o.a)({},(function(){this._self._c;return this._m(0)}),[function(){var r=this,e=r._self._c;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"docker概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker概述"}},[r._v("#")]),r._v(" Docker概述")]),r._v(" "),e("blockquote",[e("p",[r._v("带着问题学知识")])]),r._v(" "),e("ul",[e("li",[r._v("什么是Docker？")]),r._v(" "),e("li",[r._v("Docker与传统的虚拟机的区别，Docker的优点。")])]),r._v(" "),e("h2",{attrs:{id:"docker出现的背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker出现的背景"}},[r._v("#")]),r._v(" Docker出现的背景")]),r._v(" "),e("h3",{attrs:{id:"什么是docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是docker"}},[r._v("#")]),r._v(" 什么是Docker?")]),r._v(" "),e("p",[r._v("Docker是一个开源的应用容器引擎，他是基于Libcontainer来实现虚拟化，何为虚拟化呢，你可以理解为在一台机器上面运行多个系统。Docker是一个操作系统级的虚拟化，他是直接运行在宿主操作系统之上的一个容器，和宿主机公用内核，所以他有启动快，体积小的有点。Docker利用了沙箱机制实现完全虚拟化，让容器和宿主机，容器和容器之间的隔离更加彻底。")]),r._v(" "),e("h3",{attrs:{id:"docker与传统的虚拟机的区别？（docker的优点）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker与传统的虚拟机的区别？（docker的优点）"}},[r._v("#")]),r._v(" Docker与传统的虚拟机的区别？（Docker的优点）")]),r._v(" "),e("ul",[e("li",[e("p",[r._v("Docker能简化配置")]),r._v(" "),e("p",[r._v("Docker一份配置可以在不同的操作系统上运行，能大大简化配置。")])]),r._v(" "),e("li",[e("p",[r._v("Docker能实现快速部署")]),r._v(" "),e("p",[r._v("传统的部署我们需要部署一个应用需要配置各种环境，环境的一点小的区别就可能会造成应用出现问题。Docker的出现可以实现环境的一致性，实现快速部署。可以让开发环境更加贴近生产环境，降低运维的难度，提高运维的效率。")])]),r._v(" "),e("li",[e("p",[r._v("隔离应用")]),r._v(" "),e("p",[r._v("Docker可以做到在一个操作系统上运行多个容器，可以整合多个服务器降低成本。")])])]),r._v(" "),e("p",[r._v("所以Docker相比虚拟机，他的启动速度快、占用资源少、资源利用率高使得他成为了发展的趋势。")])])}],!1,null,null,null);e.default=t.exports}}]);