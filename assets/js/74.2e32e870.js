(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{354:function(t,n,e){"use strict";e.r(n);var a=e(0),r=Object(a.a)({},(function(){this._self._c;return this._m(0)}),[function(){var t=this,n=t._self._c;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"lock"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lock"}},[t._v("#")]),t._v(" Lock")]),t._v(" "),n("h2",{attrs:{id:"reentranlock"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reentranlock"}},[t._v("#")]),t._v(" ReentranLock")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("什么是可重入，什么是可重入锁? 它用来解决什么问题?")])]),t._v(" "),n("li",[n("p",[t._v("ReentrantLock的核心是AQS，那么它怎么来实现的，继承吗? 说说其类内部结构关系。")])]),t._v(" "),n("li",[n("p",[t._v("ReentrantLock是如何实现公平锁的?")])]),t._v(" "),n("li",[n("p",[t._v("ReentrantLock是如何实现非公平锁的?")])]),t._v(" "),n("li",[n("p",[t._v("ReentrantLock默认实现的是公平还是非公平锁?")])]),t._v(" "),n("li",[n("p",[t._v("使用ReentrantLock实现公平和非公平锁的示例?")])]),t._v(" "),n("li",[n("p",[t._v("ReentrantLock和Synchronized的对比?")])])])])}],!1,null,null,null);n.default=r.exports}}]);