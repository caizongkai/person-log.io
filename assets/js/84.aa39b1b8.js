(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{333:function(v,_,i){"use strict";i.r(_);var l=i(0),n=Object(l.a)({},(function(){this._self._c;return this._m(0)}),[function(){var v=this,_=v._self._c;return _("div",{staticClass:"content"},[_("h2",{attrs:{id:"多线程与并发"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多线程与并发"}},[v._v("#")]),v._v(" 多线程与并发")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("多线程的出现是要解决什么问题的?")]),v._v(" "),_("p",[v._v("为了平衡CPU、内存、I/O设备速度的差异")])]),v._v(" "),_("li",[_("p",[v._v("并发出现线程不安全的本质什么?")]),v._v(" "),_("p",[v._v("可见性，原子性和有序性。")])]),v._v(" "),_("li",[_("p",[v._v("Java是怎么解决并发问题的?")]),v._v(" "),_("p",[v._v("synchronized（原子性）、volatile（可见性）、final、8个happens-before原则")])])]),v._v(" "),_("ol",[_("li",[v._v("单一线程原则：在一个线程内，在程序前面的操作先行发生于后面的操作。")]),v._v(" "),_("li",[v._v("管程锁定原则：一个 unlock 操作先行发生于后面对同一个锁的 lock 操作。")]),v._v(" "),_("li",[v._v("volatile 变量规则：对一个 volatile 变量的写操作先行发生于后面对这个变量的读操作。")]),v._v(" "),_("li",[v._v("线程启动规则：Thread 对象的 start() 方法调用先行发生于此线程的每一个动作。")]),v._v(" "),_("li",[v._v("线程加入规则：Thread 对象的结束先行发生于 join() 方法返回。")]),v._v(" "),_("li",[v._v("线程中断规则：对线程 interrupt() 方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过 interrupted() 方法检测到是否有中断发生。")]),v._v(" "),_("li",[v._v("对象终结规则：一个对象的初始化完成(构造函数执行结束)先行发生于它的 finalize() 方法的开始。")]),v._v(" "),_("li",[v._v("传递性：如果操作 A 先行发生于操作 B，操作 B 先行发生于操作 C，那么操作 A 先行发生于操作 C。")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("线程安全是不是非真即假?")]),v._v(" "),_("p",[v._v("不是，一个类在可以被多个线程安全调用时就是线程安全的。")]),v._v(" "),_("p",[v._v("线程安全不是一个非真即假的命题，可以将共享数据按照安全程度的强弱顺序分成以下五类: 不可变、绝对线程安全、相对线程安全、线程兼容和线程对立")])]),v._v(" "),_("li",[_("p",[v._v("线程有哪几种状态?")]),v._v(" "),_("p",[v._v("线程状态：")]),v._v(" "),_("ol",[_("li",[v._v("新建（NEW）")]),v._v(" "),_("li",[v._v("可运行（Runnable）")]),v._v(" "),_("li",[v._v("阻塞（Blocking）")]),v._v(" "),_("li",[v._v("无限期等待（Waiting）")]),v._v(" "),_("li",[v._v("限期等待（Timed Waiting）")]),v._v(" "),_("li",[v._v("死亡（Terminated）")])])]),v._v(" "),_("li",[_("p",[v._v("通常线程有哪几种使用方式?")]),v._v(" "),_("ul",[_("li",[v._v("实现 Runnable 接口；")]),v._v(" "),_("li",[v._v("实现 Callable 接口；")]),v._v(" "),_("li",[v._v("继承 Thread 类。")])])]),v._v(" "),_("li",[_("p",[v._v("基础线程机制有哪些?")])]),v._v(" "),_("li",[_("p",[v._v("线程的中断方式有哪些?")])]),v._v(" "),_("li",[_("p",[v._v("线程的互斥同步方式有哪些? 如何比较和选择?")])]),v._v(" "),_("li",[_("p",[v._v("线程之间有哪些协作方式?")])]),v._v(" "),_("li",[_("p",[v._v("Synchronized可以作用在哪里? 分别通过对象锁和类锁进行举例。")])]),v._v(" "),_("li",[_("p",[v._v("Synchronized本质上是通过什么保证线程安全的? 分三个方面回答：加锁和释放锁的原理，可重入原理，保证可见性原理。")])]),v._v(" "),_("li",[_("p",[v._v("Synchronized由什么样的缺陷?  Java Lock是怎么弥补这些缺陷的。")])]),v._v(" "),_("li",[_("p",[v._v("Synchronized和Lock的对比，和选择?")])]),v._v(" "),_("li",[_("p",[v._v("Synchronized在使用时有何注意事项?")])]),v._v(" "),_("li",[_("p",[v._v("Synchronized修饰的方法在抛出异常时,会释放锁吗?")])]),v._v(" "),_("li",[_("p",[v._v("多个线程等待同一个snchronized锁的时候，JVM如何选择下一个获取锁的线程?")])]),v._v(" "),_("li",[_("p",[v._v("Synchronized使得同时只有一个线程可以执行，性能比较差，有什么提升的方法?")])]),v._v(" "),_("li",[_("p",[v._v("我想更加灵活地控制锁的释放和获取(现在释放锁和获取锁的时机都被规定死了)，怎么办?")])]),v._v(" "),_("li",[_("p",[v._v("什么是锁的升级和降级? 什么是JVM里的偏斜锁、轻量级锁、重量级锁?")])]),v._v(" "),_("li",[_("p",[v._v("不同的JDK中对Synchronized有何优化?")])]),v._v(" "),_("li",[_("p",[v._v("volatile关键字的作用是什么?")])]),v._v(" "),_("li",[_("p",[v._v("volatile能保证原子性吗?")])]),v._v(" "),_("li",[_("p",[v._v("之前32位机器上共享的long和double变量的为什么要用volatile? 现在64位机器上是否也要设置呢?")])]),v._v(" "),_("li",[_("p",[v._v("i++为什么不能保证原子性?")])]),v._v(" "),_("li",[_("p",[v._v("volatile是如何实现可见性的?  内存屏障。")])]),v._v(" "),_("li",[_("p",[v._v("volatile是如何实现有序性的?  happens-before等")])]),v._v(" "),_("li",[_("p",[v._v("说下volatile的应用场景?")])]),v._v(" "),_("li",[_("p",[v._v("所有的final修饰的字段都是编译期常量吗?")])]),v._v(" "),_("li",[_("p",[v._v("如何理解private所修饰的方法是隐式的final?")])]),v._v(" "),_("li",[_("p",[v._v("说说final类型的类如何拓展? 比如String是final类型，我们想写个MyString复用所有String中方法，同时增加一个新的toMyString()的方法，应该如何做?")])]),v._v(" "),_("li",[_("p",[v._v("final方法可以被重载吗? 可以")])]),v._v(" "),_("li",[_("p",[v._v("父类的final方法能不能够被子类重写? 不可以")])]),v._v(" "),_("li",[_("p",[v._v("说说final域重排序规则?")])]),v._v(" "),_("li",[_("p",[v._v("说说final的原理?")])]),v._v(" "),_("li",[_("p",[v._v("使用 final 的限制条件和局限性?")])])])])}],!1,null,null,null);_.default=n.exports}}]);