(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{168:function(t,e,r){t.exports=r.p+"assets/img/image-20210202163612849.da2c6eec.png"},169:function(t,e,r){t.exports=r.p+"assets/img/image-20210202163806082.71f65ae9.png"},170:function(t,e,r){t.exports=r.p+"assets/img/image-20210202163842477.33b6b94c.png"},171:function(t,e,r){t.exports=r.p+"assets/img/image-20210202163952644.cab2d2ce.png"},385:function(t,e,r){"use strict";r.r(e);var s=[function(){var t=this._self._c;return t("h1",{attrs:{id:"docker网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker网络"}},[this._v("#")]),this._v(" Docker网络")])},function(){var t=this._self._c;return t("h2",{attrs:{id:"docker四类网络模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker四类网络模式"}},[this._v("#")]),this._v(" Docker四类网络模式")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("Docker网络模式")]),t._v(" "),e("th",[t._v("配置")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("host模式")]),t._v(" "),e("td",[t._v("–net=host")]),t._v(" "),e("td",[t._v("容器和宿主机共享Network namespace。")])]),t._v(" "),e("tr",[e("td",[t._v("container模式")]),t._v(" "),e("td",[t._v("–net=container:NAME_or_ID")]),t._v(" "),e("td",[t._v("容器和另外一个容器共享Network namespace。 kubernetes中的pod就是多个容器共享一个Network namespace。")])]),t._v(" "),e("tr",[e("td",[t._v("none模式")]),t._v(" "),e("td",[t._v("–net=none")]),t._v(" "),e("td",[t._v("容器有独立的Network namespace，但并没有对其进行任何网络设置，如分配veth pair 和网桥连接，配置IP等。")])]),t._v(" "),e("tr",[e("td",[t._v("bridge模式")]),t._v(" "),e("td",[t._v("–net=bridge")]),t._v(" "),e("td",[t._v("（默认为该模式）")])])])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"host模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#host模式"}},[this._v("#")]),this._v(" host模式")])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:r(168),alt:"image-20210202163612849"}})])},function(){var t=this._self._c;return t("h3",{attrs:{id:"container模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#container模式"}},[this._v("#")]),this._v(" container模式")])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:r(169),alt:"image-20210202163806082"}})])},function(){var t=this._self._c;return t("h3",{attrs:{id:"none模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#none模式"}},[this._v("#")]),this._v(" none模式")])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:r(170),alt:"image-20210202163842477"}})])},function(){var t=this._self._c;return t("h3",{attrs:{id:"bridge模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bridge模式"}},[this._v("#")]),this._v(" bridge模式")])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:r(171),alt:"image-20210202163952644"}})])}],a=r(0),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("学习Docker网络我们可以先学习"),e("router-link",{attrs:{to:"./../../Linux/Linux-02-Linux虚拟网络.html"}},[t._v("Linux虚拟网络技术")]),t._v("以及"),e("router-link",{attrs:{to:"./../../../计算机网络/图解网络.html"}},[t._v("计算机网络")]),t._v("这个前置知识，因为Docker网络是基于Linux虚拟网络技术实现的。")],1),t._v(" "),e("p",[t._v("在宿主机虚拟一个Docker容器网桥(docker0)，Docker启动一个容器时会根据Docker网桥的网段分配给容器一个IP地址，称为Container-IP，同时Docker网桥是每个容器的默认网关。因为在同一宿主机内的容器都接入同一个网桥，这样容器之间就能够通过容器的Container-IP直接通信。")]),t._v(" "),e("p",[t._v("Docker网桥是宿主机虚拟出来的，并不是真实存在的网络设备，外部网络是无法寻址到的，这也意味着外部网络无法通过直接Container-IP访问到容器。如果容器希望外部访问能够访问到，可以通过映射容器端口到宿主主机（端口映射），即docker run创建容器时候通过 -p 或 -P 参数来启用，访问容器的时候就通过[宿主机IP]:[容器端口]访问容器。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),e("p",[t._v("这个模式容器会和宿主机共享同一个Network Namespace,容器内部的服务端口也可以使用宿主机的端口，不需要进行NAT")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),e("p",[t._v("这个模式是指定和一个容器公用一个Network Namespace，这个容器相当于Host模式的宿主机，新创建的容器不会创建自己的网卡，配置自己的 IP")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),e("p",[t._v("使用none模式，Docker容器拥有自己的Network Namespace，但是，并不为Docker容器进行任何网络配置。这时候Docker无法联网。")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),e("p",[t._v("当Docker进程启动时，会在主机上创建一个名为docker0的虚拟网桥，此主机上启动的Docker容器会连接到这个虚拟网桥上。虚拟网桥的工作方式和物理交换机类似，这样主机上的所有容器就通过交换机连在了一个二层网络中。")]),t._v(" "),e("p",[t._v("从docker0子网中分配一个IP给容器使用，并设置docker0的IP地址为容器的默认网关。在主机上创建一对虚拟网卡veth pair设备，Docker将veth pair设备的一端放在新创建的容器中，并命名为eth0（容器的网卡），另一端放在主机中，以vethxxx这样类似的名字命名，并将这个网络设备加入到docker0网桥中。可以通过brctl show命令查看。")]),t._v(" "),t._m(10)])}),s,!1,null,null,null);e.default=n.exports}}]);